// Code generated by protoc-gen-go. DO NOT EDIT.
// source: set/set.proto

package set

import (
	context "context"
	fmt "fmt"
	headers "github.com/atomix/atomix-go/proto/headers"
	protocol "github.com/atomix/atomix-go/proto/protocol"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResponseStatus int32

const (
	ResponseStatus_OK         ResponseStatus = 0
	ResponseStatus_NOOP       ResponseStatus = 1
	ResponseStatus_WRITE_LOCK ResponseStatus = 2
)

var ResponseStatus_name = map[int32]string{
	0: "OK",
	1: "NOOP",
	2: "WRITE_LOCK",
}

var ResponseStatus_value = map[string]int32{
	"OK":         0,
	"NOOP":       1,
	"WRITE_LOCK": 2,
}

func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}

func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{0}
}

type EventResponse_Type int32

const (
	EventResponse_ADDED   EventResponse_Type = 0
	EventResponse_REMOVED EventResponse_Type = 1
)

var EventResponse_Type_name = map[int32]string{
	0: "ADDED",
	1: "REMOVED",
}

var EventResponse_Type_value = map[string]int32{
	"ADDED":   0,
	"REMOVED": 1,
}

func (x EventResponse_Type) String() string {
	return proto.EnumName(EventResponse_Type_name, int32(x))
}

func (EventResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{18, 0}
}

// Set ID
type SetId struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Proto:
	//	*SetId_Raft
	//	*SetId_MultiPrimary
	//	*SetId_Log
	Proto                isSetId_Proto `protobuf_oneof:"proto"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetId) Reset()         { *m = SetId{} }
func (m *SetId) String() string { return proto.CompactTextString(m) }
func (*SetId) ProtoMessage()    {}
func (*SetId) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{0}
}

func (m *SetId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetId.Unmarshal(m, b)
}
func (m *SetId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetId.Marshal(b, m, deterministic)
}
func (m *SetId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetId.Merge(m, src)
}
func (m *SetId) XXX_Size() int {
	return xxx_messageInfo_SetId.Size(m)
}
func (m *SetId) XXX_DiscardUnknown() {
	xxx_messageInfo_SetId.DiscardUnknown(m)
}

var xxx_messageInfo_SetId proto.InternalMessageInfo

func (m *SetId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isSetId_Proto interface {
	isSetId_Proto()
}

type SetId_Raft struct {
	Raft *protocol.MultiRaftProtocol `protobuf:"bytes,2,opt,name=raft,proto3,oneof"`
}

type SetId_MultiPrimary struct {
	MultiPrimary *protocol.MultiPrimaryProtocol `protobuf:"bytes,3,opt,name=multi_primary,json=multiPrimary,proto3,oneof"`
}

type SetId_Log struct {
	Log *protocol.DistributedLogProtocol `protobuf:"bytes,4,opt,name=log,proto3,oneof"`
}

func (*SetId_Raft) isSetId_Proto() {}

func (*SetId_MultiPrimary) isSetId_Proto() {}

func (*SetId_Log) isSetId_Proto() {}

func (m *SetId) GetProto() isSetId_Proto {
	if m != nil {
		return m.Proto
	}
	return nil
}

func (m *SetId) GetRaft() *protocol.MultiRaftProtocol {
	if x, ok := m.GetProto().(*SetId_Raft); ok {
		return x.Raft
	}
	return nil
}

func (m *SetId) GetMultiPrimary() *protocol.MultiPrimaryProtocol {
	if x, ok := m.GetProto().(*SetId_MultiPrimary); ok {
		return x.MultiPrimary
	}
	return nil
}

func (m *SetId) GetLog() *protocol.DistributedLogProtocol {
	if x, ok := m.GetProto().(*SetId_Log); ok {
		return x.Log
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SetId) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SetId_Raft)(nil),
		(*SetId_MultiPrimary)(nil),
		(*SetId_Log)(nil),
	}
}

type CreateRequest struct {
	Id                   *SetId             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timeout              *duration.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CreateRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type CreateResponse struct {
	Headers              *headers.SessionHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type KeepAliveRequest struct {
	Id                   *SetId                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KeepAliveRequest) Reset()         { *m = KeepAliveRequest{} }
func (m *KeepAliveRequest) String() string { return proto.CompactTextString(m) }
func (*KeepAliveRequest) ProtoMessage()    {}
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{3}
}

func (m *KeepAliveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveRequest.Unmarshal(m, b)
}
func (m *KeepAliveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveRequest.Marshal(b, m, deterministic)
}
func (m *KeepAliveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveRequest.Merge(m, src)
}
func (m *KeepAliveRequest) XXX_Size() int {
	return xxx_messageInfo_KeepAliveRequest.Size(m)
}
func (m *KeepAliveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveRequest proto.InternalMessageInfo

func (m *KeepAliveRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KeepAliveRequest) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type KeepAliveResponse struct {
	Headers              *headers.SessionHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KeepAliveResponse) Reset()         { *m = KeepAliveResponse{} }
func (m *KeepAliveResponse) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResponse) ProtoMessage()    {}
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{4}
}

func (m *KeepAliveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResponse.Unmarshal(m, b)
}
func (m *KeepAliveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResponse.Marshal(b, m, deterministic)
}
func (m *KeepAliveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResponse.Merge(m, src)
}
func (m *KeepAliveResponse) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResponse.Size(m)
}
func (m *KeepAliveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResponse proto.InternalMessageInfo

func (m *KeepAliveResponse) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type CloseRequest struct {
	Id                   *SetId                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{5}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CloseRequest) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{6}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

type SizeRequest struct {
	Id                   *SetId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionQueryHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SizeRequest) Reset()         { *m = SizeRequest{} }
func (m *SizeRequest) String() string { return proto.CompactTextString(m) }
func (*SizeRequest) ProtoMessage()    {}
func (*SizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{7}
}

func (m *SizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeRequest.Unmarshal(m, b)
}
func (m *SizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeRequest.Marshal(b, m, deterministic)
}
func (m *SizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeRequest.Merge(m, src)
}
func (m *SizeRequest) XXX_Size() int {
	return xxx_messageInfo_SizeRequest.Size(m)
}
func (m *SizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SizeRequest proto.InternalMessageInfo

func (m *SizeRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SizeRequest) GetHeaders() *headers.SessionQueryHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type SizeResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Size                 int32                           `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SizeResponse) Reset()         { *m = SizeResponse{} }
func (m *SizeResponse) String() string { return proto.CompactTextString(m) }
func (*SizeResponse) ProtoMessage()    {}
func (*SizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{8}
}

func (m *SizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeResponse.Unmarshal(m, b)
}
func (m *SizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeResponse.Marshal(b, m, deterministic)
}
func (m *SizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeResponse.Merge(m, src)
}
func (m *SizeResponse) XXX_Size() int {
	return xxx_messageInfo_SizeResponse.Size(m)
}
func (m *SizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SizeResponse proto.InternalMessageInfo

func (m *SizeResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *SizeResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ContainsRequest struct {
	Id                   *SetId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionQueryHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Values               []string                     `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ContainsRequest) Reset()         { *m = ContainsRequest{} }
func (m *ContainsRequest) String() string { return proto.CompactTextString(m) }
func (*ContainsRequest) ProtoMessage()    {}
func (*ContainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{9}
}

func (m *ContainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsRequest.Unmarshal(m, b)
}
func (m *ContainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsRequest.Marshal(b, m, deterministic)
}
func (m *ContainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsRequest.Merge(m, src)
}
func (m *ContainsRequest) XXX_Size() int {
	return xxx_messageInfo_ContainsRequest.Size(m)
}
func (m *ContainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsRequest proto.InternalMessageInfo

func (m *ContainsRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ContainsRequest) GetHeaders() *headers.SessionQueryHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ContainsRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type ContainsResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Contains             bool                            `protobuf:"varint,2,opt,name=contains,proto3" json:"contains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ContainsResponse) Reset()         { *m = ContainsResponse{} }
func (m *ContainsResponse) String() string { return proto.CompactTextString(m) }
func (*ContainsResponse) ProtoMessage()    {}
func (*ContainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{10}
}

func (m *ContainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsResponse.Unmarshal(m, b)
}
func (m *ContainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsResponse.Marshal(b, m, deterministic)
}
func (m *ContainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsResponse.Merge(m, src)
}
func (m *ContainsResponse) XXX_Size() int {
	return xxx_messageInfo_ContainsResponse.Size(m)
}
func (m *ContainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsResponse proto.InternalMessageInfo

func (m *ContainsResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ContainsResponse) GetContains() bool {
	if m != nil {
		return m.Contains
	}
	return false
}

type AddRequest struct {
	Id                   *SetId                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Values               []string                       `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{11}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *AddRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *AddRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type AddResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Status               ResponseStatus                  `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.set.ResponseStatus" json:"status,omitempty"`
	Added                bool                            `protobuf:"varint,3,opt,name=added,proto3" json:"added,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{12}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *AddResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

func (m *AddResponse) GetAdded() bool {
	if m != nil {
		return m.Added
	}
	return false
}

type RemoveRequest struct {
	Id                   *SetId                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Values               []string                       `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{13}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RemoveRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *RemoveRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type RemoveResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Status               ResponseStatus                  `protobuf:"varint,2,opt,name=status,proto3,enum=atomix.set.ResponseStatus" json:"status,omitempty"`
	Removed              bool                            `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{14}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

func (m *RemoveResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *RemoveResponse) GetStatus() ResponseStatus {
	if m != nil {
		return m.Status
	}
	return ResponseStatus_OK
}

func (m *RemoveResponse) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

type ClearRequest struct {
	Id                   *SetId                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ClearRequest) Reset()         { *m = ClearRequest{} }
func (m *ClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()    {}
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{15}
}

func (m *ClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRequest.Unmarshal(m, b)
}
func (m *ClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRequest.Marshal(b, m, deterministic)
}
func (m *ClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRequest.Merge(m, src)
}
func (m *ClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRequest.Size(m)
}
func (m *ClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRequest proto.InternalMessageInfo

func (m *ClearRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ClearRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type ClearResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ClearResponse) Reset()         { *m = ClearResponse{} }
func (m *ClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()    {}
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{16}
}

func (m *ClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearResponse.Unmarshal(m, b)
}
func (m *ClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearResponse.Marshal(b, m, deterministic)
}
func (m *ClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearResponse.Merge(m, src)
}
func (m *ClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClearResponse.Size(m)
}
func (m *ClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearResponse proto.InternalMessageInfo

func (m *ClearResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type EventRequest struct {
	Id                   *SetId                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{17}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EventRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type EventResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Type                 EventResponse_Type              `protobuf:"varint,2,opt,name=type,proto3,enum=atomix.set.EventResponse_Type" json:"type,omitempty"`
	Value                string                          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{18}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *EventResponse) GetType() EventResponse_Type {
	if m != nil {
		return m.Type
	}
	return EventResponse_ADDED
}

func (m *EventResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type IterateRequest struct {
	Id                   *SetId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionQueryHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *IterateRequest) Reset()         { *m = IterateRequest{} }
func (m *IterateRequest) String() string { return proto.CompactTextString(m) }
func (*IterateRequest) ProtoMessage()    {}
func (*IterateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{19}
}

func (m *IterateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IterateRequest.Unmarshal(m, b)
}
func (m *IterateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IterateRequest.Marshal(b, m, deterministic)
}
func (m *IterateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IterateRequest.Merge(m, src)
}
func (m *IterateRequest) XXX_Size() int {
	return xxx_messageInfo_IterateRequest.Size(m)
}
func (m *IterateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IterateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IterateRequest proto.InternalMessageInfo

func (m *IterateRequest) GetId() *SetId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IterateRequest) GetHeaders() *headers.SessionQueryHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type IterateResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Value                string                          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *IterateResponse) Reset()         { *m = IterateResponse{} }
func (m *IterateResponse) String() string { return proto.CompactTextString(m) }
func (*IterateResponse) ProtoMessage()    {}
func (*IterateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_07f19febcda8bc25, []int{20}
}

func (m *IterateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IterateResponse.Unmarshal(m, b)
}
func (m *IterateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IterateResponse.Marshal(b, m, deterministic)
}
func (m *IterateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IterateResponse.Merge(m, src)
}
func (m *IterateResponse) XXX_Size() int {
	return xxx_messageInfo_IterateResponse.Size(m)
}
func (m *IterateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IterateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IterateResponse proto.InternalMessageInfo

func (m *IterateResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *IterateResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("atomix.set.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
	proto.RegisterEnum("atomix.set.EventResponse_Type", EventResponse_Type_name, EventResponse_Type_value)
	proto.RegisterType((*SetId)(nil), "atomix.set.SetId")
	proto.RegisterType((*CreateRequest)(nil), "atomix.set.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "atomix.set.CreateResponse")
	proto.RegisterType((*KeepAliveRequest)(nil), "atomix.set.KeepAliveRequest")
	proto.RegisterType((*KeepAliveResponse)(nil), "atomix.set.KeepAliveResponse")
	proto.RegisterType((*CloseRequest)(nil), "atomix.set.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "atomix.set.CloseResponse")
	proto.RegisterType((*SizeRequest)(nil), "atomix.set.SizeRequest")
	proto.RegisterType((*SizeResponse)(nil), "atomix.set.SizeResponse")
	proto.RegisterType((*ContainsRequest)(nil), "atomix.set.ContainsRequest")
	proto.RegisterType((*ContainsResponse)(nil), "atomix.set.ContainsResponse")
	proto.RegisterType((*AddRequest)(nil), "atomix.set.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "atomix.set.AddResponse")
	proto.RegisterType((*RemoveRequest)(nil), "atomix.set.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "atomix.set.RemoveResponse")
	proto.RegisterType((*ClearRequest)(nil), "atomix.set.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "atomix.set.ClearResponse")
	proto.RegisterType((*EventRequest)(nil), "atomix.set.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "atomix.set.EventResponse")
	proto.RegisterType((*IterateRequest)(nil), "atomix.set.IterateRequest")
	proto.RegisterType((*IterateResponse)(nil), "atomix.set.IterateResponse")
}

func init() { proto.RegisterFile("set/set.proto", fileDescriptor_07f19febcda8bc25) }

var fileDescriptor_07f19febcda8bc25 = []byte{
	// 918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x16, 0xf5, 0xaf, 0x91, 0x25, 0x2b, 0x8b, 0xd6, 0x96, 0x99, 0xd4, 0x70, 0x59, 0xa4, 0x35,
	0x7a, 0xa0, 0x0b, 0xe5, 0x12, 0x20, 0xe8, 0x8f, 0x22, 0xa9, 0x8d, 0x63, 0xbb, 0x72, 0x56, 0x41,
	0x7b, 0x0c, 0x68, 0x73, 0xac, 0x2e, 0x2a, 0x72, 0xd5, 0xe5, 0xd2, 0xa8, 0xf3, 0x04, 0x05, 0xfa,
	0x04, 0xbd, 0xf5, 0xda, 0x67, 0xe8, 0x13, 0xf5, 0x2d, 0x0a, 0x2e, 0x97, 0x14, 0x29, 0xcb, 0x40,
	0x85, 0xa8, 0xce, 0x49, 0xdc, 0x9d, 0xd9, 0xf9, 0xbe, 0xf9, 0x56, 0x3b, 0x33, 0xd0, 0x0a, 0x50,
	0x1e, 0x05, 0x28, 0xed, 0xb9, 0xe0, 0x92, 0x13, 0x70, 0x24, 0xf7, 0xd8, 0xaf, 0x76, 0x80, 0xd2,
	0xdc, 0x55, 0x5b, 0x97, 0x7c, 0x76, 0x94, 0x7c, 0xc4, 0x4e, 0xe6, 0x87, 0x3f, 0xa1, 0xe3, 0xa2,
	0x08, 0x8e, 0xf4, 0xaf, 0xde, 0xde, 0x9f, 0x72, 0x3e, 0x9d, 0x61, 0xec, 0x7d, 0x11, 0x5e, 0x1d,
	0xb9, 0xa1, 0x70, 0x24, 0xe3, 0x7e, 0x6c, 0xb7, 0xfe, 0x31, 0xa0, 0x32, 0x41, 0x79, 0xec, 0x12,
	0x02, 0x65, 0xdf, 0xf1, 0xb0, 0x6b, 0x1c, 0x18, 0x87, 0x0d, 0xaa, 0xbe, 0xc9, 0x53, 0x28, 0x0b,
	0xe7, 0x4a, 0x76, 0x8b, 0x07, 0xc6, 0x61, 0xb3, 0x67, 0xd9, 0x9a, 0x48, 0x0a, 0x7d, 0x16, 0xce,
	0x24, 0xa3, 0xce, 0x95, 0x3c, 0xd7, 0x3b, 0x2f, 0x0a, 0x54, 0x9d, 0x20, 0xa7, 0xd0, 0xf2, 0x22,
	0xe3, 0x9b, 0xb9, 0x60, 0x9e, 0x23, 0x6e, 0xba, 0x25, 0x15, 0xe2, 0xf1, 0xea, 0x10, 0xe7, 0xb1,
	0x53, 0x26, 0xca, 0x96, 0x97, 0xd9, 0x27, 0xcf, 0xa0, 0x34, 0xe3, 0xd3, 0x6e, 0x59, 0xc5, 0xf8,
	0xec, 0x56, 0x8c, 0x21, 0x0b, 0xa4, 0x60, 0x17, 0xa1, 0x44, 0xf7, 0x94, 0x4f, 0x33, 0x51, 0xa2,
	0x53, 0xcf, 0x6b, 0x50, 0x89, 0x73, 0x9d, 0x42, 0x6b, 0x20, 0xd0, 0x91, 0x48, 0xf1, 0x97, 0x10,
	0x03, 0x49, 0x3e, 0x86, 0x22, 0x73, 0x55, 0xc2, 0xcd, 0xde, 0x03, 0x7b, 0xa1, 0xb2, 0xad, 0x14,
	0xa1, 0x45, 0xe6, 0x92, 0x27, 0x50, 0x93, 0xcc, 0x43, 0x1e, 0x26, 0x22, 0xec, 0xd9, 0xb1, 0xa2,
	0x76, 0xa2, 0xa8, 0x3d, 0xd4, 0x8a, 0xd2, 0xc4, 0xd3, 0x7a, 0x09, 0xed, 0x04, 0x28, 0x98, 0x73,
	0x3f, 0x88, 0x84, 0xac, 0xe9, 0x7b, 0xd1, 0x70, 0xfb, 0x09, 0x5c, 0x72, 0x5d, 0x13, 0x0c, 0x02,
	0xc6, 0xfd, 0x17, 0xf1, 0x92, 0x26, 0xee, 0x16, 0x87, 0xce, 0x09, 0xe2, 0xbc, 0x3f, 0x63, 0xd7,
	0xeb, 0xf0, 0xce, 0x00, 0x16, 0xd7, 0x03, 0x3c, 0x83, 0x07, 0x19, 0xc0, 0x77, 0xe6, 0xff, 0x33,
	0x6c, 0x0d, 0x66, 0x3c, 0xb8, 0x1f, 0xee, 0xdb, 0xd0, 0xd2, 0x60, 0x31, 0x6f, 0x8b, 0x43, 0x73,
	0xc2, 0xde, 0xae, 0x03, 0xfe, 0xe5, 0x32, 0xf8, 0x27, 0x77, 0x80, 0xbf, 0x0a, 0x51, 0xdc, 0xdc,
	0x62, 0xe0, 0xc2, 0x56, 0x0c, 0xa8, 0x85, 0xfb, 0x66, 0x59, 0xb8, 0x4f, 0xef, 0x08, 0x97, 0x9c,
	0x58, 0x8e, 0x18, 0xbd, 0xcb, 0x80, 0xbd, 0x45, 0xc5, 0xa6, 0x42, 0xd5, 0xb7, 0xf5, 0xbb, 0x01,
	0xdb, 0x03, 0xee, 0x4b, 0x87, 0xf9, 0xc1, 0xbd, 0xe5, 0x46, 0x76, 0xa0, 0x7a, 0xed, 0xcc, 0x42,
	0x0c, 0xba, 0xa5, 0x83, 0xd2, 0x61, 0x83, 0xea, 0x95, 0x35, 0x87, 0xce, 0x82, 0xcc, 0xc6, 0xf2,
	0x36, 0xa1, 0x7e, 0xa9, 0xa3, 0x2a, 0xb6, 0x75, 0x9a, 0xae, 0xad, 0xdf, 0x0c, 0x80, 0xbe, 0xeb,
	0xae, 0x91, 0xfa, 0xd7, 0xcb, 0xa9, 0x3f, 0xbe, 0x83, 0xcf, 0x80, 0x7b, 0x9e, 0xe3, 0xbb, 0xff,
	0x39, 0xf9, 0x3f, 0x0c, 0x68, 0x2a, 0x2a, 0x1b, 0x4b, 0xbc, 0x07, 0xd5, 0x40, 0x3a, 0x32, 0x8c,
	0x99, 0xb6, 0x7b, 0x66, 0x36, 0xa3, 0xe4, 0xd4, 0x44, 0x79, 0x50, 0xed, 0x49, 0x3e, 0x80, 0x8a,
	0xe3, 0xba, 0xe8, 0xaa, 0x32, 0x5b, 0xa7, 0xf1, 0x22, 0xfa, 0x9b, 0xb4, 0x28, 0x7a, 0x7c, 0xad,
	0xca, 0xf1, 0xbf, 0x29, 0xf5, 0xa7, 0x01, 0xed, 0x84, 0xcd, 0x7b, 0x15, 0xab, 0x0b, 0x35, 0xa1,
	0x78, 0x24, 0x72, 0x25, 0x4b, 0x4b, 0x44, 0xc5, 0x0a, 0x1d, 0x71, 0x8f, 0x72, 0x59, 0xaf, 0xa2,
	0x9a, 0xa5, 0x30, 0x37, 0x25, 0x4a, 0x94, 0xc6, 0xe8, 0x1a, 0x7d, 0x79, 0x9f, 0x69, 0xfc, 0x6d,
	0x40, 0x4b, 0x83, 0x6e, 0xf0, 0x72, 0xcb, 0xf2, 0x66, 0x8e, 0xfa, 0x6a, 0xf7, 0xb3, 0xcc, 0x73,
	0x50, 0xf6, 0xeb, 0x9b, 0x39, 0x52, 0xe5, 0x1b, 0xbd, 0x04, 0xf5, 0x7f, 0x53, 0x57, 0xdb, 0xa0,
	0xf1, 0xc2, 0xda, 0x87, 0x72, 0xe4, 0x43, 0x1a, 0x50, 0xe9, 0x0f, 0x87, 0xa3, 0x61, 0xa7, 0x40,
	0x9a, 0x50, 0xa3, 0xa3, 0xb3, 0xf1, 0x0f, 0xa3, 0x61, 0xc7, 0xb0, 0x04, 0xb4, 0x8f, 0x25, 0x8a,
	0xf5, 0x66, 0x83, 0x77, 0x6c, 0x15, 0x0c, 0xb6, 0x53, 0xcc, 0x8d, 0x49, 0x96, 0xa6, 0x5f, 0xcc,
	0xa4, 0xff, 0x79, 0x2f, 0x7a, 0x79, 0xd9, 0xb7, 0x40, 0xaa, 0x50, 0x1c, 0x9f, 0x74, 0x0a, 0xa4,
	0x0e, 0xe5, 0xef, 0xc7, 0xe3, 0xf3, 0x8e, 0x41, 0xda, 0x00, 0x3f, 0xd2, 0xe3, 0xd7, 0xa3, 0x37,
	0xa7, 0xe3, 0xc1, 0x49, 0xa7, 0xd8, 0xfb, 0xab, 0x02, 0x30, 0x41, 0x39, 0x41, 0x71, 0xcd, 0x2e,
	0x91, 0xf4, 0xa1, 0x1a, 0xcf, 0x34, 0x64, 0x2f, 0xab, 0x46, 0x6e, 0xa0, 0x32, 0xcd, 0x55, 0x26,
	0xdd, 0x8a, 0x0b, 0xe4, 0x25, 0x34, 0xd2, 0xc9, 0x82, 0x3c, 0xca, 0xba, 0x2e, 0x4f, 0x38, 0xe6,
	0x47, 0x77, 0x58, 0xd3, 0x58, 0x5f, 0x41, 0x45, 0x75, 0x7a, 0xd2, 0xcd, 0x41, 0x66, 0x26, 0x0d,
	0x73, 0x6f, 0x85, 0x25, 0x3d, 0xff, 0x0c, 0xca, 0x51, 0x9f, 0x26, 0xbb, 0xb9, 0xab, 0x5d, 0x8c,
	0x0a, 0x66, 0xf7, 0xb6, 0x21, 0x3d, 0xfc, 0x1d, 0xd4, 0x93, 0x86, 0x47, 0x1e, 0xe6, 0x50, 0xf2,
	0x3d, 0xd9, 0x7c, 0xb4, 0xda, 0x98, 0x06, 0x7a, 0x0a, 0xa5, 0xbe, 0xeb, 0x92, 0x9d, 0xac, 0xdb,
	0xa2, 0xaf, 0x99, 0xbb, 0xb7, 0xf6, 0xd3, 0x93, 0x7d, 0xa8, 0xc6, 0xb5, 0x34, 0x7f, 0x1d, 0xb9,
	0x6a, 0x6f, 0x9a, 0xab, 0x4c, 0x79, 0x09, 0xd1, 0x11, 0xcb, 0x12, 0x2e, 0xea, 0xdf, 0xb2, 0x84,
	0x99, 0x2a, 0x15, 0x53, 0x38, 0x65, 0x81, 0x44, 0x3f, 0x1f, 0x20, 0x5b, 0x79, 0xf2, 0x01, 0x72,
	0x6f, 0xd6, 0x2a, 0x7c, 0x61, 0x90, 0x6f, 0xa1, 0xa6, 0x9f, 0x00, 0xc9, 0x71, 0xcd, 0xbf, 0x45,
	0xf3, 0xe1, 0x4a, 0xdb, 0x22, 0xce, 0xf3, 0x1d, 0x20, 0x8c, 0x27, 0x4e, 0x53, 0x31, 0xbf, 0x8c,
	0x3c, 0xcf, 0x8d, 0x8b, 0xaa, 0x1a, 0xd2, 0x9f, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x28,
	0xc6, 0xe5, 0x51, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SetServiceClient is the client API for SetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SetServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	Size(ctx context.Context, in *SizeRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error)
	Listen(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (SetService_ListenClient, error)
	Iterate(ctx context.Context, in *IterateRequest, opts ...grpc.CallOption) (SetService_IterateClient, error)
}

type setServiceClient struct {
	cc *grpc.ClientConn
}

func NewSetServiceClient(cc *grpc.ClientConn) SetServiceClient {
	return &setServiceClient{cc}
}

func (c *setServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Size(ctx context.Context, in *SizeRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Size", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error) {
	out := new(ContainsResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Contains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error) {
	out := new(ClearResponse)
	err := c.cc.Invoke(ctx, "/atomix.set.SetService/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *setServiceClient) Listen(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (SetService_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SetService_serviceDesc.Streams[0], "/atomix.set.SetService/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &setServiceListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SetService_ListenClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type setServiceListenClient struct {
	grpc.ClientStream
}

func (x *setServiceListenClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *setServiceClient) Iterate(ctx context.Context, in *IterateRequest, opts ...grpc.CallOption) (SetService_IterateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SetService_serviceDesc.Streams[1], "/atomix.set.SetService/Iterate", opts...)
	if err != nil {
		return nil, err
	}
	x := &setServiceIterateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SetService_IterateClient interface {
	Recv() (*IterateResponse, error)
	grpc.ClientStream
}

type setServiceIterateClient struct {
	grpc.ClientStream
}

func (x *setServiceIterateClient) Recv() (*IterateResponse, error) {
	m := new(IterateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SetServiceServer is the server API for SetService service.
type SetServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	Size(context.Context, *SizeRequest) (*SizeResponse, error)
	Contains(context.Context, *ContainsRequest) (*ContainsResponse, error)
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Clear(context.Context, *ClearRequest) (*ClearResponse, error)
	Listen(*EventRequest, SetService_ListenServer) error
	Iterate(*IterateRequest, SetService_IterateServer) error
}

// UnimplementedSetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSetServiceServer struct {
}

func (*UnimplementedSetServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSetServiceServer) KeepAlive(ctx context.Context, req *KeepAliveRequest) (*KeepAliveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedSetServiceServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedSetServiceServer) Size(ctx context.Context, req *SizeRequest) (*SizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Size not implemented")
}
func (*UnimplementedSetServiceServer) Contains(ctx context.Context, req *ContainsRequest) (*ContainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contains not implemented")
}
func (*UnimplementedSetServiceServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedSetServiceServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedSetServiceServer) Clear(ctx context.Context, req *ClearRequest) (*ClearResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}
func (*UnimplementedSetServiceServer) Listen(req *EventRequest, srv SetService_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}
func (*UnimplementedSetServiceServer) Iterate(req *IterateRequest, srv SetService_IterateServer) error {
	return status.Errorf(codes.Unimplemented, "method Iterate not implemented")
}

func RegisterSetServiceServer(s *grpc.Server, srv SetServiceServer) {
	s.RegisterService(&_SetService_serviceDesc, srv)
}

func _SetService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Size_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Size(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Size",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Size(ctx, req.(*SizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Contains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Contains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Contains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Contains(ctx, req.(*ContainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SetServiceServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.set.SetService/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SetServiceServer).Clear(ctx, req.(*ClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SetService_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SetServiceServer).Listen(m, &setServiceListenServer{stream})
}

type SetService_ListenServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type setServiceListenServer struct {
	grpc.ServerStream
}

func (x *setServiceListenServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _SetService_Iterate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IterateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SetServiceServer).Iterate(m, &setServiceIterateServer{stream})
}

type SetService_IterateServer interface {
	Send(*IterateResponse) error
	grpc.ServerStream
}

type setServiceIterateServer struct {
	grpc.ServerStream
}

func (x *setServiceIterateServer) Send(m *IterateResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.set.SetService",
	HandlerType: (*SetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SetService_Create_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _SetService_KeepAlive_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _SetService_Close_Handler,
		},
		{
			MethodName: "Size",
			Handler:    _SetService_Size_Handler,
		},
		{
			MethodName: "Contains",
			Handler:    _SetService_Contains_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _SetService_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _SetService_Remove_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _SetService_Clear_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _SetService_Listen_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Iterate",
			Handler:       _SetService_Iterate_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "set/set.proto",
}
