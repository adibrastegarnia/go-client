syntax = "proto3";

import "protocol/protocol.proto";
import "headers/headers.proto";

package atomix.counter;

option java_package = "io.atomix.grpc.counter";
option java_multiple_files = true;

// Counter ID
message CounterId {
    string name = 1;
    oneof proto {
        protocol.MultiRaftProtocol raft = 2;
        protocol.MultiPrimaryProtocol multi_primary = 3;
        protocol.DistributedLogProtocol log = 4;
    }
}

message CreateRequest {
    CounterId id = 1;
}

message CreateResponse {
    atomix.headers.ResponseHeader header = 1;
}

message DeleteRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
}

message DeleteResponse {

}

message IncrementRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
    int64 delta = 3;
}

message IncrementResponse {
    atomix.headers.ResponseHeader header = 1;
    int64 previous_value = 2;
    int64 next_value = 3;
}

message DecrementRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
    int64 delta = 3;
}

message DecrementResponse {
    atomix.headers.ResponseHeader header = 1;
    int64 previous_value = 2;
    int64 next_value = 3;
}

message GetRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
}

message GetResponse {
    atomix.headers.ResponseHeader header = 1;
    int64 value = 2;
}

message SetRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
    int64 value = 3;
}

message SetResponse {
    atomix.headers.ResponseHeader header = 1;
    int64 previous_value = 2;
}

message CheckAndSetRequest {
    CounterId id = 1;
    atomix.headers.RequestHeader header = 2;
    int64 expect = 3;
    int64 update = 4;
}

message CheckAndSetResponse {
    atomix.headers.ResponseHeader header = 1;
    bool succeeded = 2;
}

service CounterService {
    rpc Create(CreateRequest) returns (CreateResponse) {

    }

    rpc Delete(DeleteRequest) returns (DeleteResponse) {

    }

    rpc Set(SetRequest) returns (SetResponse) {

    }

    rpc Get(GetRequest) returns (GetResponse) {

    }

    rpc Increment(IncrementRequest) returns (IncrementResponse) {

    }

    rpc Decrement(DecrementRequest) returns (DecrementResponse) {

    }

    rpc CheckAndSet(CheckAndSetRequest) returns (CheckAndSetResponse) {

    }
}