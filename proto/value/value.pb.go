// Code generated by protoc-gen-go. DO NOT EDIT.
// source: value/value.proto

package value

import (
	context "context"
	fmt "fmt"
	headers "github.com/atomix/atomix-go/proto/headers"
	protocol "github.com/atomix/atomix-go/proto/protocol"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventResponse_Type int32

const (
	EventResponse_UPDATED EventResponse_Type = 0
)

var EventResponse_Type_name = map[int32]string{
	0: "UPDATED",
}

var EventResponse_Type_value = map[string]int32{
	"UPDATED": 0,
}

func (x EventResponse_Type) String() string {
	return proto.EnumName(EventResponse_Type_name, int32(x))
}

func (EventResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{14, 0}
}

// Value ID
type ValueId struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Proto:
	//	*ValueId_Raft
	//	*ValueId_MultiPrimary
	//	*ValueId_Log
	Proto                isValueId_Proto `protobuf_oneof:"proto"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ValueId) Reset()         { *m = ValueId{} }
func (m *ValueId) String() string { return proto.CompactTextString(m) }
func (*ValueId) ProtoMessage()    {}
func (*ValueId) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{0}
}

func (m *ValueId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueId.Unmarshal(m, b)
}
func (m *ValueId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueId.Marshal(b, m, deterministic)
}
func (m *ValueId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueId.Merge(m, src)
}
func (m *ValueId) XXX_Size() int {
	return xxx_messageInfo_ValueId.Size(m)
}
func (m *ValueId) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueId.DiscardUnknown(m)
}

var xxx_messageInfo_ValueId proto.InternalMessageInfo

func (m *ValueId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isValueId_Proto interface {
	isValueId_Proto()
}

type ValueId_Raft struct {
	Raft *protocol.MultiRaftProtocol `protobuf:"bytes,2,opt,name=raft,proto3,oneof"`
}

type ValueId_MultiPrimary struct {
	MultiPrimary *protocol.MultiPrimaryProtocol `protobuf:"bytes,3,opt,name=multi_primary,json=multiPrimary,proto3,oneof"`
}

type ValueId_Log struct {
	Log *protocol.DistributedLogProtocol `protobuf:"bytes,4,opt,name=log,proto3,oneof"`
}

func (*ValueId_Raft) isValueId_Proto() {}

func (*ValueId_MultiPrimary) isValueId_Proto() {}

func (*ValueId_Log) isValueId_Proto() {}

func (m *ValueId) GetProto() isValueId_Proto {
	if m != nil {
		return m.Proto
	}
	return nil
}

func (m *ValueId) GetRaft() *protocol.MultiRaftProtocol {
	if x, ok := m.GetProto().(*ValueId_Raft); ok {
		return x.Raft
	}
	return nil
}

func (m *ValueId) GetMultiPrimary() *protocol.MultiPrimaryProtocol {
	if x, ok := m.GetProto().(*ValueId_MultiPrimary); ok {
		return x.MultiPrimary
	}
	return nil
}

func (m *ValueId) GetLog() *protocol.DistributedLogProtocol {
	if x, ok := m.GetProto().(*ValueId_Log); ok {
		return x.Log
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ValueId) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ValueId_Raft)(nil),
		(*ValueId_MultiPrimary)(nil),
		(*ValueId_Log)(nil),
	}
}

type CreateRequest struct {
	Id                   *ValueId           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timeout              *duration.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CreateRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

type CreateResponse struct {
	Headers              *headers.SessionHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type KeepAliveRequest struct {
	Id                   *ValueId                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KeepAliveRequest) Reset()         { *m = KeepAliveRequest{} }
func (m *KeepAliveRequest) String() string { return proto.CompactTextString(m) }
func (*KeepAliveRequest) ProtoMessage()    {}
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{3}
}

func (m *KeepAliveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveRequest.Unmarshal(m, b)
}
func (m *KeepAliveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveRequest.Marshal(b, m, deterministic)
}
func (m *KeepAliveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveRequest.Merge(m, src)
}
func (m *KeepAliveRequest) XXX_Size() int {
	return xxx_messageInfo_KeepAliveRequest.Size(m)
}
func (m *KeepAliveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveRequest proto.InternalMessageInfo

func (m *KeepAliveRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KeepAliveRequest) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type KeepAliveResponse struct {
	Headers              *headers.SessionHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *KeepAliveResponse) Reset()         { *m = KeepAliveResponse{} }
func (m *KeepAliveResponse) String() string { return proto.CompactTextString(m) }
func (*KeepAliveResponse) ProtoMessage()    {}
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{4}
}

func (m *KeepAliveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveResponse.Unmarshal(m, b)
}
func (m *KeepAliveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveResponse.Marshal(b, m, deterministic)
}
func (m *KeepAliveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveResponse.Merge(m, src)
}
func (m *KeepAliveResponse) XXX_Size() int {
	return xxx_messageInfo_KeepAliveResponse.Size(m)
}
func (m *KeepAliveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveResponse proto.InternalMessageInfo

func (m *KeepAliveResponse) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type CloseRequest struct {
	Id                   *ValueId                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{5}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CloseRequest) GetHeaders() *headers.SessionHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{6}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

type GetRequest struct {
	Id                   *ValueId                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionQueryHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{7}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetRequest) GetHeaders() *headers.SessionQueryHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type GetResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Value                []byte                          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version              int64                           `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{8}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *GetResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GetResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SetRequest struct {
	Id                   *ValueId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Value                []byte                         `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{9}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SetRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SetResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Version              int64                           `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	PreviousValue        []byte                          `protobuf:"bytes,3,opt,name=previous_value,json=previousValue,proto3" json:"previous_value,omitempty"`
	PreviousVersion      int64                           `protobuf:"varint,4,opt,name=previous_version,json=previousVersion,proto3" json:"previous_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SetResponse) Reset()         { *m = SetResponse{} }
func (m *SetResponse) String() string { return proto.CompactTextString(m) }
func (*SetResponse) ProtoMessage()    {}
func (*SetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{10}
}

func (m *SetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResponse.Unmarshal(m, b)
}
func (m *SetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResponse.Marshal(b, m, deterministic)
}
func (m *SetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResponse.Merge(m, src)
}
func (m *SetResponse) XXX_Size() int {
	return xxx_messageInfo_SetResponse.Size(m)
}
func (m *SetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetResponse proto.InternalMessageInfo

func (m *SetResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *SetResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SetResponse) GetPreviousValue() []byte {
	if m != nil {
		return m.PreviousValue
	}
	return nil
}

func (m *SetResponse) GetPreviousVersion() int64 {
	if m != nil {
		return m.PreviousVersion
	}
	return 0
}

type CheckAndSetRequest struct {
	Id                   *ValueId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Check                []byte                         `protobuf:"bytes,3,opt,name=check,proto3" json:"check,omitempty"`
	Update               []byte                         `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
	Version              int64                          `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CheckAndSetRequest) Reset()         { *m = CheckAndSetRequest{} }
func (m *CheckAndSetRequest) String() string { return proto.CompactTextString(m) }
func (*CheckAndSetRequest) ProtoMessage()    {}
func (*CheckAndSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{11}
}

func (m *CheckAndSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAndSetRequest.Unmarshal(m, b)
}
func (m *CheckAndSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAndSetRequest.Marshal(b, m, deterministic)
}
func (m *CheckAndSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAndSetRequest.Merge(m, src)
}
func (m *CheckAndSetRequest) XXX_Size() int {
	return xxx_messageInfo_CheckAndSetRequest.Size(m)
}
func (m *CheckAndSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAndSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAndSetRequest proto.InternalMessageInfo

func (m *CheckAndSetRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CheckAndSetRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CheckAndSetRequest) GetCheck() []byte {
	if m != nil {
		return m.Check
	}
	return nil
}

func (m *CheckAndSetRequest) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *CheckAndSetRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CheckAndSetResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Version              int64                           `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Succeeded            bool                            `protobuf:"varint,3,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CheckAndSetResponse) Reset()         { *m = CheckAndSetResponse{} }
func (m *CheckAndSetResponse) String() string { return proto.CompactTextString(m) }
func (*CheckAndSetResponse) ProtoMessage()    {}
func (*CheckAndSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{12}
}

func (m *CheckAndSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAndSetResponse.Unmarshal(m, b)
}
func (m *CheckAndSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAndSetResponse.Marshal(b, m, deterministic)
}
func (m *CheckAndSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAndSetResponse.Merge(m, src)
}
func (m *CheckAndSetResponse) XXX_Size() int {
	return xxx_messageInfo_CheckAndSetResponse.Size(m)
}
func (m *CheckAndSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAndSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAndSetResponse proto.InternalMessageInfo

func (m *CheckAndSetResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *CheckAndSetResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CheckAndSetResponse) GetSucceeded() bool {
	if m != nil {
		return m.Succeeded
	}
	return false
}

type EventRequest struct {
	Id                   *ValueId                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Headers              *headers.SessionCommandHeaders `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{13}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetId() *ValueId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EventRequest) GetHeaders() *headers.SessionCommandHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

type EventResponse struct {
	Headers              *headers.SessionResponseHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Type                 EventResponse_Type              `protobuf:"varint,2,opt,name=type,proto3,enum=atomix.value.EventResponse_Type" json:"type,omitempty"`
	PreviousValue        []byte                          `protobuf:"bytes,3,opt,name=previous_value,json=previousValue,proto3" json:"previous_value,omitempty"`
	PreviousVersion      int64                           `protobuf:"varint,4,opt,name=previous_version,json=previousVersion,proto3" json:"previous_version,omitempty"`
	NewValue             []byte                          `protobuf:"bytes,5,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	NewVersion           int64                           `protobuf:"varint,6,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d92bdcec396f8bda, []int{14}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

func (m *EventResponse) GetHeaders() *headers.SessionResponseHeaders {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *EventResponse) GetType() EventResponse_Type {
	if m != nil {
		return m.Type
	}
	return EventResponse_UPDATED
}

func (m *EventResponse) GetPreviousValue() []byte {
	if m != nil {
		return m.PreviousValue
	}
	return nil
}

func (m *EventResponse) GetPreviousVersion() int64 {
	if m != nil {
		return m.PreviousVersion
	}
	return 0
}

func (m *EventResponse) GetNewValue() []byte {
	if m != nil {
		return m.NewValue
	}
	return nil
}

func (m *EventResponse) GetNewVersion() int64 {
	if m != nil {
		return m.NewVersion
	}
	return 0
}

func init() {
	proto.RegisterEnum("atomix.value.EventResponse_Type", EventResponse_Type_name, EventResponse_Type_value)
	proto.RegisterType((*ValueId)(nil), "atomix.value.ValueId")
	proto.RegisterType((*CreateRequest)(nil), "atomix.value.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "atomix.value.CreateResponse")
	proto.RegisterType((*KeepAliveRequest)(nil), "atomix.value.KeepAliveRequest")
	proto.RegisterType((*KeepAliveResponse)(nil), "atomix.value.KeepAliveResponse")
	proto.RegisterType((*CloseRequest)(nil), "atomix.value.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "atomix.value.CloseResponse")
	proto.RegisterType((*GetRequest)(nil), "atomix.value.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "atomix.value.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "atomix.value.SetRequest")
	proto.RegisterType((*SetResponse)(nil), "atomix.value.SetResponse")
	proto.RegisterType((*CheckAndSetRequest)(nil), "atomix.value.CheckAndSetRequest")
	proto.RegisterType((*CheckAndSetResponse)(nil), "atomix.value.CheckAndSetResponse")
	proto.RegisterType((*EventRequest)(nil), "atomix.value.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "atomix.value.EventResponse")
}

func init() { proto.RegisterFile("value/value.proto", fileDescriptor_d92bdcec396f8bda) }

var fileDescriptor_d92bdcec396f8bda = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x4d, 0x4f, 0xdb, 0x48,
	0x18, 0x8e, 0xf3, 0x49, 0xde, 0x24, 0x7c, 0x0c, 0xb0, 0x1b, 0x0c, 0x02, 0xd6, 0xab, 0xec, 0xb2,
	0x17, 0x67, 0x15, 0x7a, 0xa8, 0xd4, 0x56, 0x2d, 0x24, 0x28, 0xb4, 0x85, 0x2a, 0x75, 0x68, 0xaf,
	0xc8, 0xc4, 0x2f, 0xc1, 0x22, 0xf6, 0xb8, 0xfe, 0x08, 0xcd, 0xa9, 0xea, 0xb5, 0x97, 0xfe, 0x91,
	0xfe, 0x83, 0x5e, 0xfb, 0x6f, 0xfa, 0x27, 0x2a, 0x8f, 0xc7, 0xc1, 0x76, 0x92, 0x4a, 0x51, 0x11,
	0xbd, 0x80, 0xe7, 0xfd, 0x78, 0x9e, 0xe7, 0x7d, 0x3c, 0xe3, 0x09, 0xac, 0x0c, 0xd5, 0x81, 0x87,
	0x75, 0xf6, 0x57, 0xb6, 0x6c, 0xea, 0x52, 0x52, 0x56, 0x5d, 0x6a, 0xe8, 0xef, 0x65, 0x16, 0x13,
	0xff, 0x64, 0xc1, 0x1e, 0x1d, 0xd4, 0xc3, 0x87, 0xa0, 0x4c, 0x5c, 0xbf, 0x42, 0x55, 0x43, 0xdb,
	0xa9, 0xf3, 0xff, 0x3c, 0xbc, 0xdd, 0xa7, 0xb4, 0x3f, 0xc0, 0xa0, 0xfa, 0xc2, 0xbb, 0xac, 0x6b,
	0x9e, 0xad, 0xba, 0x3a, 0x35, 0x83, 0xbc, 0xf4, 0x5d, 0x80, 0xc2, 0x5b, 0x1f, 0xf9, 0xb9, 0x46,
	0x08, 0x64, 0x4d, 0xd5, 0xc0, 0xaa, 0xb0, 0x2b, 0xec, 0x15, 0x15, 0xf6, 0x4c, 0x1e, 0x42, 0xd6,
	0x56, 0x2f, 0xdd, 0x6a, 0x7a, 0x57, 0xd8, 0x2b, 0x35, 0x24, 0x99, 0x8b, 0x19, 0x93, 0x9f, 0x7a,
	0x03, 0x57, 0x57, 0xd4, 0x4b, 0xb7, 0xc3, 0x23, 0xc7, 0x29, 0x85, 0x75, 0x90, 0x13, 0xa8, 0x18,
	0x7e, 0xf2, 0xdc, 0xb2, 0x75, 0x43, 0xb5, 0x47, 0xd5, 0x0c, 0x83, 0xa8, 0x4d, 0x87, 0xe8, 0x04,
	0x45, 0x11, 0x94, 0xb2, 0x11, 0x89, 0x93, 0x47, 0x90, 0x19, 0xd0, 0x7e, 0x35, 0xcb, 0x30, 0xfe,
	0x9d, 0xc0, 0x68, 0xe9, 0x8e, 0x6b, 0xeb, 0x17, 0x9e, 0x8b, 0xda, 0x09, 0xed, 0x47, 0x50, 0xfc,
	0xae, 0xc3, 0x02, 0xe4, 0x82, 0x69, 0xaf, 0xa1, 0xd2, 0xb4, 0x51, 0x75, 0x51, 0xc1, 0x77, 0x1e,
	0x3a, 0x2e, 0xa9, 0x41, 0x5a, 0xd7, 0xd8, 0xc0, 0xa5, 0xc6, 0xba, 0x1c, 0x75, 0x5a, 0xe6, 0xae,
	0x28, 0x69, 0x5d, 0x23, 0xfb, 0x50, 0x70, 0x75, 0x03, 0xa9, 0x17, 0x1a, 0xb1, 0x21, 0x07, 0xbe,
	0xca, 0xa1, 0xaf, 0x72, 0x8b, 0xfb, 0xaa, 0x84, 0x95, 0xd2, 0x0b, 0x58, 0x0c, 0xc9, 0x1c, 0x8b,
	0x9a, 0x8e, 0x6f, 0x66, 0x81, 0xbf, 0x1d, 0x4e, 0xb9, 0x1d, 0x52, 0x86, 0x2f, 0xad, 0x8b, 0x8e,
	0xa3, 0x53, 0xf3, 0x38, 0x58, 0x2a, 0x61, 0xb9, 0xe4, 0xc0, 0xf2, 0x4b, 0x44, 0xeb, 0x60, 0xa0,
	0x0f, 0xe7, 0xd5, 0x1e, 0x21, 0x4d, 0xcf, 0x47, 0x7a, 0x0a, 0x2b, 0x11, 0xd2, 0x5f, 0x9e, 0x81,
	0x42, 0xb9, 0x39, 0xa0, 0xce, 0xfd, 0xe9, 0x5f, 0x82, 0x0a, 0x27, 0x0c, 0xb4, 0x4b, 0x36, 0x40,
	0x1b, 0xdd, 0x39, 0xf9, 0x9f, 0x24, 0xf9, 0xff, 0x9e, 0xc1, 0xff, 0xda, 0x43, 0x7b, 0x34, 0x21,
	0xe2, 0x03, 0x94, 0x18, 0x27, 0xb7, 0xef, 0x59, 0xd2, 0xbe, 0x7f, 0x66, 0xa0, 0x85, 0x1d, 0x49,
	0x40, 0xb2, 0x06, 0x39, 0x26, 0x92, 0xa9, 0x29, 0x2b, 0xc1, 0x82, 0x54, 0xa1, 0x30, 0x44, 0xdb,
	0x6f, 0x64, 0xe7, 0x2c, 0xa3, 0x84, 0x4b, 0xe9, 0x93, 0x00, 0xd0, 0x9d, 0x7b, 0xea, 0xa7, 0xc9,
	0xa9, 0x6b, 0x33, 0x74, 0x36, 0xa9, 0x61, 0xa8, 0xa6, 0x36, 0x5b, 0x66, 0x26, 0x22, 0x53, 0xfa,
	0x2a, 0x40, 0xa9, 0x7b, 0xa7, 0x76, 0x44, 0x06, 0x4f, 0xc7, 0x06, 0x27, 0x35, 0x58, 0xb4, 0x6c,
	0x1c, 0xea, 0xd4, 0x73, 0xce, 0xa3, 0x52, 0x2a, 0x61, 0x94, 0xcd, 0x4b, 0xfe, 0x83, 0xe5, 0xdb,
	0x32, 0x8e, 0x94, 0x65, 0x48, 0x4b, 0xe3, 0x42, 0x6e, 0xe5, 0x37, 0x01, 0x48, 0xf3, 0x0a, 0x7b,
	0xd7, 0x07, 0xa6, 0xf6, 0x7b, 0x2c, 0xed, 0xf9, 0xec, 0xa1, 0xa5, 0x6c, 0x41, 0xfe, 0x80, 0xbc,
	0x67, 0x69, 0xaa, 0x8b, 0x4c, 0x75, 0x59, 0xe1, 0xab, 0xa8, 0x31, 0xb9, 0xf8, 0x8e, 0xf8, 0x2c,
	0xc0, 0x6a, 0x6c, 0x8c, 0x7b, 0x78, 0x19, 0x5b, 0x50, 0x74, 0xbc, 0x5e, 0x0f, 0x51, 0x43, 0x8d,
	0xe9, 0x5f, 0x50, 0x6e, 0x03, 0xd2, 0x10, 0xca, 0x47, 0x43, 0x34, 0xef, 0xdb, 0x51, 0xe9, 0x4b,
	0x1a, 0x2a, 0x9c, 0xf8, 0xce, 0x3c, 0x78, 0x00, 0x59, 0x77, 0x64, 0x05, 0xc7, 0x73, 0xb1, 0xb1,
	0x1b, 0x57, 0x1f, 0x23, 0x93, 0xcf, 0x46, 0x16, 0x2a, 0xac, 0xfa, 0xee, 0x37, 0x2b, 0xd9, 0x84,
	0xa2, 0x89, 0x37, 0x1c, 0x2c, 0xc7, 0xc0, 0x16, 0x4c, 0xbc, 0x09, 0x70, 0x76, 0xa0, 0xc4, 0x92,
	0x1c, 0x22, 0xcf, 0x20, 0xc0, 0x4f, 0xf3, 0x3d, 0xb2, 0x0a, 0x59, 0x5f, 0x1d, 0x29, 0x41, 0xe1,
	0x4d, 0xa7, 0x75, 0x70, 0x76, 0xd4, 0x5a, 0x4e, 0x35, 0x3e, 0x66, 0xa1, 0xcc, 0xfa, 0xbb, 0x68,
	0x0f, 0xf5, 0x1e, 0x92, 0x23, 0xc8, 0x07, 0x57, 0x1c, 0xd9, 0x8c, 0xcf, 0x19, 0xbb, 0x65, 0xc5,
	0xad, 0xe9, 0x49, 0xfe, 0x55, 0x4e, 0x91, 0x57, 0x50, 0x1c, 0x5f, 0x34, 0x64, 0x3b, 0x5e, 0x9c,
	0xbc, 0xf6, 0xc4, 0x9d, 0x99, 0xf9, 0x31, 0xde, 0x21, 0xe4, 0xd8, 0x87, 0x9f, 0x88, 0x09, 0xe2,
	0xc8, 0xf5, 0x23, 0x6e, 0x4e, 0xcd, 0x8d, 0x31, 0x1e, 0x43, 0xa6, 0x8b, 0x2e, 0xa9, 0xc6, 0xab,
	0x6e, 0x4f, 0xbd, 0xb8, 0x31, 0x25, 0x13, 0xed, 0x6e, 0x4f, 0x76, 0xb7, 0x67, 0x76, 0xb7, 0x63,
	0xdd, 0x67, 0x50, 0x8a, 0x9c, 0x4f, 0x92, 0xd8, 0x43, 0x93, 0x5f, 0x20, 0xf1, 0xaf, 0x9f, 0x54,
	0x8c, 0x51, 0x5b, 0x90, 0x63, 0xdb, 0x2f, 0xe9, 0x4a, 0xf4, 0xe4, 0x25, 0x5d, 0x89, 0xed, 0x57,
	0x29, 0xf5, 0xbf, 0x70, 0x58, 0x85, 0x35, 0x9d, 0x86, 0x45, 0x7d, 0xdb, 0xea, 0x05, 0x95, 0x1d,
	0xe1, 0x22, 0xcf, 0x7e, 0x0b, 0xed, 0xff, 0x08, 0x00, 0x00, 0xff, 0xff, 0x68, 0xf2, 0x56, 0x10,
	0xc4, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ValueServiceClient is the client API for ValueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValueServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	CheckAndSet(ctx context.Context, in *CheckAndSetRequest, opts ...grpc.CallOption) (*CheckAndSetResponse, error)
	Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (ValueService_EventClient, error)
}

type valueServiceClient struct {
	cc *grpc.ClientConn
}

func NewValueServiceClient(cc *grpc.ClientConn) ValueServiceClient {
	return &valueServiceClient{cc}
}

func (c *valueServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	out := new(SetResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) CheckAndSet(ctx context.Context, in *CheckAndSetRequest, opts ...grpc.CallOption) (*CheckAndSetResponse, error) {
	out := new(CheckAndSetResponse)
	err := c.cc.Invoke(ctx, "/atomix.value.ValueService/CheckAndSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valueServiceClient) Event(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (ValueService_EventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ValueService_serviceDesc.Streams[0], "/atomix.value.ValueService/Event", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueServiceEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ValueService_EventClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type valueServiceEventClient struct {
	grpc.ClientStream
}

func (x *valueServiceEventClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ValueServiceServer is the server API for ValueService service.
type ValueServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	Set(context.Context, *SetRequest) (*SetResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	CheckAndSet(context.Context, *CheckAndSetRequest) (*CheckAndSetResponse, error)
	Event(*EventRequest, ValueService_EventServer) error
}

// UnimplementedValueServiceServer can be embedded to have forward compatible implementations.
type UnimplementedValueServiceServer struct {
}

func (*UnimplementedValueServiceServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedValueServiceServer) KeepAlive(ctx context.Context, req *KeepAliveRequest) (*KeepAliveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedValueServiceServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedValueServiceServer) Set(ctx context.Context, req *SetRequest) (*SetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedValueServiceServer) Get(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedValueServiceServer) CheckAndSet(ctx context.Context, req *CheckAndSetRequest) (*CheckAndSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAndSet not implemented")
}
func (*UnimplementedValueServiceServer) Event(req *EventRequest, srv ValueService_EventServer) error {
	return status.Errorf(codes.Unimplemented, "method Event not implemented")
}

func RegisterValueServiceServer(s *grpc.Server, srv ValueServiceServer) {
	s.RegisterService(&_ValueService_serviceDesc, srv)
}

func _ValueService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_CheckAndSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAndSetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValueServiceServer).CheckAndSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.value.ValueService/CheckAndSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValueServiceServer).CheckAndSet(ctx, req.(*CheckAndSetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValueService_Event_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ValueServiceServer).Event(m, &valueServiceEventServer{stream})
}

type ValueService_EventServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type valueServiceEventServer struct {
	grpc.ServerStream
}

func (x *valueServiceEventServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ValueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.value.ValueService",
	HandlerType: (*ValueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ValueService_Create_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _ValueService_KeepAlive_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _ValueService_Close_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _ValueService_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ValueService_Get_Handler,
		},
		{
			MethodName: "CheckAndSet",
			Handler:    _ValueService_CheckAndSet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Event",
			Handler:       _ValueService_Event_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "value/value.proto",
}
