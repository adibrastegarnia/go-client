// Code generated by protoc-gen-go. DO NOT EDIT.
// source: partitions.proto

package atomix_partitions

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PartitionGroup struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Partitions           int32    `protobuf:"varint,3,opt,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionGroup) Reset()         { *m = PartitionGroup{} }
func (m *PartitionGroup) String() string { return proto.CompactTextString(m) }
func (*PartitionGroup) ProtoMessage()    {}
func (*PartitionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ae87223fba81869, []int{0}
}

func (m *PartitionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionGroup.Unmarshal(m, b)
}
func (m *PartitionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionGroup.Marshal(b, m, deterministic)
}
func (m *PartitionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionGroup.Merge(m, src)
}
func (m *PartitionGroup) XXX_Size() int {
	return xxx_messageInfo_PartitionGroup.Size(m)
}
func (m *PartitionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionGroup proto.InternalMessageInfo

func (m *PartitionGroup) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PartitionGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PartitionGroup) GetPartitions() int32 {
	if m != nil {
		return m.Partitions
	}
	return 0
}

type GetPartitionGroupsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPartitionGroupsRequest) Reset()         { *m = GetPartitionGroupsRequest{} }
func (m *GetPartitionGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartitionGroupsRequest) ProtoMessage()    {}
func (*GetPartitionGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ae87223fba81869, []int{1}
}

func (m *GetPartitionGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionGroupsRequest.Unmarshal(m, b)
}
func (m *GetPartitionGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionGroupsRequest.Marshal(b, m, deterministic)
}
func (m *GetPartitionGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionGroupsRequest.Merge(m, src)
}
func (m *GetPartitionGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartitionGroupsRequest.Size(m)
}
func (m *GetPartitionGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionGroupsRequest proto.InternalMessageInfo

type GetPartitionGroupsResponse struct {
	Groups               []*PartitionGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPartitionGroupsResponse) Reset()         { *m = GetPartitionGroupsResponse{} }
func (m *GetPartitionGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPartitionGroupsResponse) ProtoMessage()    {}
func (*GetPartitionGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ae87223fba81869, []int{2}
}

func (m *GetPartitionGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionGroupsResponse.Unmarshal(m, b)
}
func (m *GetPartitionGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionGroupsResponse.Marshal(b, m, deterministic)
}
func (m *GetPartitionGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionGroupsResponse.Merge(m, src)
}
func (m *GetPartitionGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPartitionGroupsResponse.Size(m)
}
func (m *GetPartitionGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionGroupsResponse proto.InternalMessageInfo

func (m *GetPartitionGroupsResponse) GetGroups() []*PartitionGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func init() {
	proto.RegisterType((*PartitionGroup)(nil), "atomix.partitions.PartitionGroup")
	proto.RegisterType((*GetPartitionGroupsRequest)(nil), "atomix.partitions.GetPartitionGroupsRequest")
	proto.RegisterType((*GetPartitionGroupsResponse)(nil), "atomix.partitions.GetPartitionGroupsResponse")
}

func init() { proto.RegisterFile("partitions.proto", fileDescriptor_3ae87223fba81869) }

var fileDescriptor_3ae87223fba81869 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x48, 0x2c, 0x2a,
	0xc9, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4c, 0x2c,
	0xc9, 0xcf, 0xcd, 0xac, 0xd0, 0x43, 0x48, 0x48, 0xf1, 0x81, 0x65, 0x92, 0xf3, 0x73, 0x20, 0x4a,
	0x94, 0x22, 0xb8, 0xf8, 0x02, 0x60, 0xb2, 0xee, 0x45, 0xf9, 0xa5, 0x05, 0x42, 0x42, 0x5c, 0x2c,
	0x25, 0x95, 0x05, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0x2c, 0x2f,
	0x31, 0x37, 0x55, 0x82, 0x09, 0x22, 0x06, 0x62, 0x0b, 0xc9, 0x71, 0x71, 0x21, 0xcc, 0x95, 0x60,
	0x56, 0x60, 0xd4, 0x60, 0x0d, 0x42, 0x12, 0x51, 0x92, 0xe6, 0x92, 0x74, 0x4f, 0x2d, 0x41, 0x35,
	0xbc, 0x38, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x29, 0x9c, 0x4b, 0x0a, 0x9b, 0x64, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x25, 0x17, 0x5b, 0x3a, 0x58, 0x44, 0x82, 0x51, 0x81, 0x59,
	0x83, 0xdb, 0x48, 0x51, 0x0f, 0xc3, 0x23, 0x7a, 0xa8, 0x7a, 0x83, 0xa0, 0x1a, 0x8c, 0xda, 0x19,
	0xb9, 0x04, 0xe0, 0x52, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0xc5, 0x5c, 0x42, 0x98,
	0xb6, 0x09, 0xe9, 0x60, 0x31, 0x15, 0xa7, 0x8b, 0xa5, 0x74, 0x89, 0x54, 0x0d, 0xf1, 0x82, 0x12,
	0x83, 0x93, 0x2c, 0x97, 0x64, 0x66, 0x3e, 0x4c, 0x53, 0x7a, 0x51, 0x41, 0x32, 0x92, 0xce, 0x00,
	0xc6, 0x24, 0x36, 0x70, 0xf8, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x72, 0x3f, 0x2d, 0x15,
	0xb6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PartitionServiceClient is the client API for PartitionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartitionServiceClient interface {
	GetPartitionGroups(ctx context.Context, in *GetPartitionGroupsRequest, opts ...grpc.CallOption) (*GetPartitionGroupsResponse, error)
}

type partitionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPartitionServiceClient(cc *grpc.ClientConn) PartitionServiceClient {
	return &partitionServiceClient{cc}
}

func (c *partitionServiceClient) GetPartitionGroups(ctx context.Context, in *GetPartitionGroupsRequest, opts ...grpc.CallOption) (*GetPartitionGroupsResponse, error) {
	out := new(GetPartitionGroupsResponse)
	err := c.cc.Invoke(ctx, "/atomix.partitions.PartitionService/GetPartitionGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartitionServiceServer is the server API for PartitionService service.
type PartitionServiceServer interface {
	GetPartitionGroups(context.Context, *GetPartitionGroupsRequest) (*GetPartitionGroupsResponse, error)
}

// UnimplementedPartitionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartitionServiceServer struct {
}

func (*UnimplementedPartitionServiceServer) GetPartitionGroups(ctx context.Context, req *GetPartitionGroupsRequest) (*GetPartitionGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartitionGroups not implemented")
}

func RegisterPartitionServiceServer(s *grpc.Server, srv PartitionServiceServer) {
	s.RegisterService(&_PartitionService_serviceDesc, srv)
}

func _PartitionService_GetPartitionGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartitionGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartitionServiceServer).GetPartitionGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atomix.partitions.PartitionService/GetPartitionGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartitionServiceServer).GetPartitionGroups(ctx, req.(*GetPartitionGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atomix.partitions.PartitionService",
	HandlerType: (*PartitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPartitionGroups",
			Handler:    _PartitionService_GetPartitionGroups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "partitions.proto",
}
